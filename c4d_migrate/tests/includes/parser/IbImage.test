<?php
/**
 * @file
 * Tests for the ibimage tag parser.
 */

/**
 * Tests for the [ibimage==…] tag parser.
 */
class C4dMigrateTestParserIbImage extends DrupalUnitTestCase {
  /**
   * The body we use as test data.
   *
   * WARNING:
   * There are 6 [] tags in total but only 5 unique tags.
   *
   * @var string
   */
  private $text = <<<EOT
<p>[ibimage==21182==small==none====ibimage-left==_dsc3652.jpg][ibimage==21181==small==popup====ibimage-left==_dsc3648.jpg][ibimage==21172==small==photo_album_link====ibimage-left==Test album]123</p>
<p>
  In Brussels, the United Nations Industrial Development Organization [UNIDO].
  There will be a message from UN Secretary General Ban Ki-Moon and a message by UNIDO
  [ibimage==21181==small==popup====ibimage-left==_dsc3648.jpg]
  Director General Li Yong read by Christophe Yvetot, Head of UNIDO Brussels Office and a
  joint message by the AU, UNECA and UNIDO, read by H.E. Mr. Ajay K. Bramdeo, Ambassador
  of the AU in Brussels.[ibimage==21252==large==http://www.aid2013.nu==_blank==ibimage-right==AID 2013]
</p>
<p>[ibimage==25927==large==photo_album_slideshow======Test album]</p>
EOT;

  /**
   * Expected result
   *
   * @var array
   */
  private $expectedTags
    = array(
      '[ibimage==21182==small==none====ibimage-left==_dsc3652.jpg]'                     => array(
        'type'    => "ibimage:image",
        'tag'     => '[ibimage==21182==small==none====ibimage-left==_dsc3652.jpg]',
        'fid'     => 21182,
        'preset'  => "small",
        'link'    => "none",
        'target'  => "",
        'style'   => "ibimage-left",
        'caption' => "_dsc3652.jpg",
      ),
      '[ibimage==21181==small==popup====ibimage-left==_dsc3648.jpg]'                    => array(
        'type'    => "ibimage:popup",
        'tag'     => '[ibimage==21181==small==popup====ibimage-left==_dsc3648.jpg]',
        'fid'     => 21181,
        'preset'  => "small",
        'link'    => "popup",
        'target'  => "",
        'style'   => "ibimage-left",
        'caption' => "_dsc3648.jpg",
      ),
      '[ibimage==21172==small==photo_album_link====ibimage-left==Test album]'           => array(
        'type'    => "ibimage:photoalbum",
        'tag'     => '[ibimage==21172==small==photo_album_link====ibimage-left==Test album]',
        'fid'     => 21172,
        'preset'  => "small",
        'link'    => "photo_album_link",
        'target'  => "",
        'style'   => "ibimage-left",
        'caption' => "Test album",
      ),
      '[ibimage==21252==large==http://www.aid2013.nu==_blank==ibimage-right==AID 2013]' => array(
        'type'    => "ibimage:link",
        'tag'     => '[ibimage==21252==large==http://www.aid2013.nu==_blank==ibimage-right==AID 2013]',
        'fid'     => 21252,
        'preset'  => "large",
        'link'    => "http://www.aid2013.nu",
        'target'  => "_blank",
        'style'   => "ibimage-right",
        'caption' => "AID 2013",
      ),
      '[ibimage==25927==large==photo_album_slideshow======Test album]'                  => array(
        'type'    => "ibimage:slideshow",
        'tag'     => '[ibimage==25927==large==photo_album_slideshow======Test album]',
        'fid'     => 25927,
        'preset'  => "large",
        'link'    => "photo_album_slideshow",
        'target'  => "",
        'style'   => "",
        'caption' => "Test album",
      ),
    );

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name'        => 'Parse [ibimage==…] tags',
      'description' => 'Test that the IbImage parser parses out the [ibimage==…] tags.',
      'group'       => 'C4D Migrate',
    );
  }

  /**
   * Load the parser class during setup.
   */
  public function setUp() {
    parent::setUp();
    require_once __DIR__ . '/../../../includes/parser/Abstract.inc';
    require_once __DIR__ . '/../../../includes/parser/IbImage.inc';
  }

  /**
   * Test parsing out the tags.
   */
  public function testParser() {
    $parser = new C4dMigrateParserIbImage();

    $parser->parse($this->text);
    $tags = $parser->getTags();
    $this->assertEqual(5, count($tags), 'Expected to get 5 unique tags.');

    $this->assertEqual($this->expectedTags, $tags);
  }
}
